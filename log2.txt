Graph 0: 
Input Graph: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 3 
2 -> 4 
} 
Greedy Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 4 
} 
Brute force Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 4 
} 
LP Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
2 -> 3 
2 -> 4 
} 
Graph 1: 
Input Graph: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 3 
2 -> 4 
3 -> 5 
4 -> 5 
} 
Greedy Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 4 
3 -> 5 
} 
Brute force Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 4 
4 -> 5 
} 
LP Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
1 -> 2 
1 -> 3 
2 -> 4 
3 -> 5 
} 
Graph 2: 
Input Graph: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
Greedy Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
Brute force Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
LP Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
Graph 3: 
Input Graph: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
1 -> 2 
1 -> 4 
1 -> 5 
2 -> 3 
2 -> 4 
3 -> 4 
4 -> 5 
} 
Greedy Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
Brute force Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
LP Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
0 -> 2 
0 -> 3 
0 -> 4 
0 -> 5 
} 
Graph 4: 
Input Graph: 
digraph G { 
edge [dir = none] 
0 -> 1 
} 
Greedy Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
} 
Brute force Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
} 
LP Tree: 
digraph G { 
edge [dir = none] 
0 -> 1 
} 
